extends ../layout

block content
	section.collection.group
		header.collection-header.group
			h3.collection-sub-title #{playlist.title}
			h4.structural Sort tracks:
			ul(class="sort group")
				li.col.index(data-sort-type="index")
					strong.asc Index<svg viewBox="0 0 612 306"><use xlink:href="#icon-caret-asc"></use></svg>
				li.col.title(data-sort-type="title")
					span Title
				li.col.artist(data-sort-type="artist")
					span Artist
				li.col.time(data-sort-type="time")
					span Time
		h3.structural.
			Song list
		ol
			-   var collection = {};
			-   for (var i = 0, len = songs.length; i < len; i++) {
			-       var id = songs[i]._id;
			-       collection[id] = songs[i];
			-   }

			-   var sortorder = playlist.items;
			-   for (var i = 0, len = sortorder.length; i < len; i++) {
			-       var song = collection[sortorder[i]];
			-       var index = i;
			-       index += 1;
			-       var artist = Array.isArray(song.artist) && song.artist.length > 1 ? song.artist.slice(0, -1).join(', ') + ' & ' + song.artist[song.artist.length -1] : song.artist;
			-       var featuredartist = Array.isArray(song.featuredartist) && song.featuredartist.length > 1 ? song.featuredartist.slice(0, -1).join(', ') + ' & ' + song.featuredartist[song.featuredartist.length -1] : song.featuredartist;
			-       featuredartist = featuredartist && featuredartist.length > 0 ? (' feat. ' + featuredartist) : '';
			-       var duration = Math.floor((song.audio.duration / (60 * 1000)) % 60) + ':' + (Math.floor((song.audio.duration / 1000) % 60) < 10 ? '0' : '') + Math.floor((song.audio.duration / 1000) % 60);
			-       var songAvailable = song.available;

			li(class=song.available === true ? undefined : "unavailable", data-id="#{song._id}", data-index="#{index}", data-artist="#{artist}#{featuredartist}", data-title="#{song.title}")
				a(href="/#{path}/#{song.permalink}/")
					div.col.index #{index}
					div.col.title #{song.title}
					div.col.artist #{artist}#{featuredartist}
					div.col.time #{duration}

			- }